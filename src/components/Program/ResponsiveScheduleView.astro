---
// Componente unificado responsivo para vista del programa
interface Props {
  days: string[];
  turnos: string[];
  weekDates: Date[];
}

const { days, turnos, weekDates } = Astro.props;
---

<!-- Vista Única Responsiva -->
<div class="responsive-schedule">
  <!-- Selector de día solo visible en mobile -->
  <div class="mobile-day-selector lg:hidden mb-4">
    <select 
      id="mobileDaySelector" 
      class="w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
    >
      {days.map((day, index) => (
        <option value={day} data-index={index}>
          {day.charAt(0).toUpperCase() + day.slice(1)} - {weekDates[index].toLocaleDateString('es-ES', { 
            weekday: 'short', 
            day: 'numeric', 
            month: 'short' 
          })}
        </option>
      ))}
    </select>
  </div>

  <!-- Contenedor único de días -->
  {days.map((day, dayIndex) => (
    <div 
      class={`day-container ${dayIndex === 0 ? 'mobile-visible' : ''}`}
      data-day={day}
      data-day-index={dayIndex}
      style={dayIndex === 0 ? '' : 'display: none;'}
    >
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden mb-4 lg:mb-8">
        <!-- Header del día -->
        <div class="bg-gradient-to-r from-blue-600 to-blue-700 text-white p-4">
          <h3 class="text-lg lg:text-xl font-semibold">
            {day.charAt(0).toUpperCase() + day.slice(1)} - {weekDates[dayIndex].toLocaleDateString('es-ES', {
              weekday: 'long',
              day: 'numeric', 
              month: 'long'
            })}
          </h3>
        </div>

        <!-- Contenido único adaptativo con CSS responsivo -->
        <div class="schedule-content">
          <!-- Layout único que se adapta con CSS -->
          <div class="responsive-layout">
            {turnos.map((turno) => (
              <div class="turno-container">
                <!-- Header del turno (visible en mobile, parte de tabla en desktop) -->
                <div class="turno-header">
                  <h4 class="turno-title">{turno}</h4>
                  <span class="position-count">4 posiciones</span>
                </div>
                
                <!-- Grid de posiciones (1 col mobile, 4 col desktop) -->
                <div class="positions-grid">
                  {[...Array(4)].map((_, index) => (
                    <div class="position-item">
                      <label class="position-label">
                        Posición {index + 1}
                      </label>
                      <div class="position-input">
                        <select
                          class="position-select user-select"
                          data-day={day}
                          data-turno={turno}
                          data-index={index}
                          data-date={weekDates[dayIndex].toISOString().split("T")[0]}
                        >
                          <option value="">Sin asignar</option>
                          <option value="--separator--" disabled>Seleccionar usuario...</option>
                        </select>
                        <span 
                          class="position-icon"
                          id={`icon-${day}-${turno}-${index}`}
                        />
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  ))}
</div>

<script>
  // Manejo del selector de día en mobile
  document.addEventListener('DOMContentLoaded', () => {
    const daySelector = document.getElementById('mobileDaySelector') as HTMLSelectElement;
    const dayContainers = document.querySelectorAll('.day-container') as NodeListOf<HTMLElement>;

    if (daySelector && dayContainers.length > 0) {
      // Función para mostrar/ocultar días en mobile
      const updateMobileView = () => {
        const selectedDay = daySelector.value;
        
        dayContainers.forEach(container => {
          const dayValue = container.dataset.day;
          if (window.innerWidth < 1024) { // lg breakpoint
            // Mobile: usar clases para mejor control de visibilidad
            if (dayValue === selectedDay) {
              container.classList.add('mobile-visible');
              container.style.display = 'block';
            } else {
              container.classList.remove('mobile-visible');
              container.style.display = 'none';
            }
          } else {
            // Desktop: mostrar todos y limpiar clases mobile
            container.classList.remove('mobile-visible');
            container.style.display = 'block';
          }
        });
      };

      // Event listener para cambio de día
      daySelector.addEventListener('change', updateMobileView);
      
      // Event listener para cambio de viewport
      window.addEventListener('resize', updateMobileView);
      
      // Inicializar vista
      updateMobileView();
    }
  });
</script>

<style>
  /* ========================================
     LAYOUT RESPONSIVO UNIFICADO
     ======================================== */

  /* Layout base para mobile (stack vertical) */
  .responsive-layout {
    display: flex;
    flex-direction: column;
  }

  .turno-container {
    border-bottom: 1px solid #e5e7eb;
    padding: 1rem;
  }

  .turno-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
  }

  .turno-title {
    font-weight: 500;
    color: #111827;
    font-size: 1rem;
  }

  .position-count {
    font-size: 0.75rem;
    color: #6b7280;
    background-color: #f3f4f6;
    padding: 0.25rem 0.5rem;
    border-radius: 0.375rem;
  }

  /* Grid de posiciones - mobile: 1 columna */
  .positions-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 0.75rem;
  }

  .position-item {
    display: flex;
    flex-direction: column;
  }

  .position-label {
    display: block;
    font-size: 0.75rem;
    font-weight: 500;
    color: #374151;
    margin-bottom: 0.25rem;
  }

  .position-input {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  /* Estilos del select */
  .position-select {
    flex: 1;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 0.5rem;
    font-size: 1rem;
    background-color: white;
    transition: border-color 0.15s ease-in-out, background-color 0.15s ease-in-out;
  }

  .position-select:focus {
    outline: none;
    ring: 2px;
    ring-color: #3b82f6;
    border-color: #3b82f6;
  }

  .position-icon {
    flex-shrink: 0;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.125rem;
  }

  /* Estados de validación */
  .position-select[data-valid="true"] {
    border-color: #10b981;
    background-color: #f0fdf4;
  }

  .position-select[data-valid="false"] {
    border-color: #f59e0b;
    background-color: #fffbeb;
  }

  .position-select[data-valid="error"] {
    border-color: #ef4444;
    background-color: #fef2f2;
  }

  /* Mobile: touch optimization - solo aplicar en mobile */
  @media (max-width: 1023px) {
    .position-select {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 0.7rem center;
      background-size: 1.5em 1.5em;
      padding-right: 2.5rem;
    }
  }

  /* ========================================
     DESKTOP LAYOUT (flexbox horizontal)
     ======================================== */
  @media (min-width: 1024px) {
    /* Layout desktop: cada turno como fila */
    .responsive-layout {
      border: 1px solid #e5e7eb;
      border-radius: 0.5rem;
      overflow: hidden;
    }

    .turno-container {
      display: flex;
      border-bottom: 1px solid #e5e7eb;
      background-color: white;
      transition: background-color 0.15s ease-in-out;
    }

    .turno-container:hover {
      background-color: #f9fafb;
    }

    .turno-container:last-child {
      border-bottom: none;
    }

    /* Header del turno (columna izquierda) */
    .turno-header {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
      padding: 1rem 1.5rem;
      background-color: #f9fafb;
      border-right: 1px solid #e5e7eb;
      min-width: 120px;
      margin-bottom: 0;
    }

    .turno-title {
      font-size: 0.875rem;
      font-weight: 600;
      color: #374151;
    }

    .position-count {
      display: none; /* Ocultar en desktop */
    }

    /* Grid de posiciones (4 columnas horizontales) */
    .positions-grid {
      flex: 1;
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 1rem;
      padding: 1rem 1.5rem;
      align-items: center;
    }

    /* Para tablets, mantener 4 columnas pero más compactas */
    @media (min-width: 1024px) and (max-width: 1279px) {
      .positions-grid {
        gap: 0.75rem;
        padding: 0.75rem 1rem;
      }
    }

    /* Para pantallas grandes */
    @media (min-width: 1280px) {
      .positions-grid {
        gap: 1.25rem;
        padding: 1.25rem 1.5rem;
      }
    }

    .position-item {
      display: flex;
      flex-direction: column;
    }

    .position-label {
      font-size: 0.75rem;
      font-weight: 500;
      color: #6b7280;
      margin-bottom: 0.5rem;
    }

    .position-input {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    /* Select más compacto en desktop */
    .position-select {
      flex: 1;
      padding: 0.5rem 0.75rem;
      font-size: 0.875rem;
      border-radius: 0.375rem;
      min-width: 0; /* Permitir que se encoja */
      border: 1px solid #d1d5db;
      background-color: white;
    }

    .position-select:hover {
      border-color: #3b82f6;
    }

    .position-select:focus {
      outline: none;
      ring: 2px;
      ring-color: #3b82f6;
      border-color: #3b82f6;
    }

    .position-icon {
      width: 1.5rem;
      height: 1.5rem;
      font-size: 0.875rem;
      flex-shrink: 0;
    }

    /* Mejorar apariencia en tablets */
    @media (min-width: 1024px) and (max-width: 1279px) {
      .position-select {
        font-size: 0.8rem;
        padding: 0.4rem 0.6rem;
      }
      
      .position-label {
        font-size: 0.7rem;
      }
      
      .turno-header {
        min-width: 100px;
        padding: 0.75rem 1rem;
      }
      
      .turno-title {
        font-size: 0.8rem;
      }
    }
  }

  /* Optimizaciones de rendimiento */
  .day-container {
    contain: layout style paint;
  }

  /* Control de visibilidad para mobile */
  @media (max-width: 1023px) {
    .day-container:not(.mobile-visible) {
      display: none !important;
    }
    
    .day-container.mobile-visible {
      display: block !important;
    }
  }
</style>